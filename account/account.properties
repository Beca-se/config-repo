# Druid 配置
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.druid.initial-size= 5
# 最大连接池数量
spring.datasource.druid.max-active= 20
# 最小连接池数量
spring.datasource.druid.min-idle= 5
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait= 1000
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.max-open-prepared-statements=10
# 检测连接有效时执行的SQL
spring.datasource.druid.validation-query="SELECT 1"
# 连接有效检测的SQL执行最大时间
spring.datasource.druid.validation-query-timeout=100
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true

spring.datasource.druid.time-between-eviction-runs-millis=10000
# 一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 配置一个连接在池中最大生存的时间，单位是毫秒
spring.datasource.druid.max-evictable-idle-time-millis=600000

# 是否在日志显示慢SQL
spring.datasource.druid.filter.stat.log-slow-sql=true
# 执行时间超过多少的被认为时慢SQL
spring.datasource.druid.filter.stat.slow-sql-millis=2000
